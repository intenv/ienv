---
- name: encrypt disk volume
  user: root
  hosts: localhost
  connection: local

  vars:
      mkfs: mkfs.ext4
      name: Lunapark
      livecd_dir: /home

  vars_prompt:
      - name: dev
        prompt: "Device? "
        private: no
      - name: dev_p
        prompt: "Device part to encrypt? "
        private: no
      # - name: name
      #   prompt: "Name? "
      #   private: no
      - name: pass
        prompt: "Passphrase? "
        private: yes

  tasks:
      # - debug:
      #     msg: "{{( item  | regex_replace('([a-zA-Z]*)(\\d+)', '\\2') )}}"
      #   with_items: "{{ansible_devices[dev].partitions}}"
      #   # with_items: "{{ansible_device_links[dev].partitions}}"
      #   tags:
      #     - debug

      # - name: Закрыть криптованный раздел
      #   shell: cryptsetup luksClose {{name}}
      # - name: Размонтировать раздел
      #   mount:
      #     src: /dev/{{item}}
      #     state: unmounted
      #   with_items: "{{ansible_devices[dev].partitions}}"

      - name: Удалить все разделы
        parted:
          device: "/dev/{{dev}}"
          number: "{{( item  | regex_replace('([a-zA-Z]*)(\\d+)', '\\2') )}}"
          state: absent
        with_items: "{{ansible_devices[dev].partitions}}"

      - name: Создать раздел
        parted:
          device: "/dev/{{dev}}"
          number: 1
          state: present
          part_end: 1GiB

      - name: Создать раздел
        parted:
          device: "/dev/{{dev}}"
          number: 2
          state: present
          part_start: 1GiB

      - name: dd iso file
        command: dd if={{livecd_dir}}/livecd/remaster.iso of=/dev/{{dev}}1

      - name: create temp file
        command: mktemp /tmp/encdisk.XXXXXXX
        register: tmp

      - name: write password to temp file
        template: src=templates/encrypt-pass.j2 dest={{tmp.stdout}}

      - name: encrypt disk
        shell: cat {{tmp.stdout}} |
               cryptsetup --verbose --batch-mode luksFormat /dev/{{dev_p}}

      - name: open encrypted disk
        shell: cat {{tmp.stdout}} | cryptsetup luksOpen /dev/{{dev_p}} {{name}}

      - name: mkfs on /dev/{{dev_p}}
        command: '{{mkfs}} -L {{name}} /dev/mapper/{{name}}'

      - name: purge temp file
        command: shred -z -u {{tmp.stdout}}
