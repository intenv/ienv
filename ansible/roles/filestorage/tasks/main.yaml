---
  - name: Установить роль elassandra
    include_role:
      name: elassandra

  - name: Установить пакеты
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
      allow_unauthenticated: yes
    with_items: "{{ packages }}"
    tags:
      - install

  - name: Получить токен
    uri:
      url: http://{{oauth_server}}:8081/oauth/token
      method: POST
      body: 'grant_type=password&username=superuser&password=12341234&scope=read,write,trust'
      headers:
        Authorization: "Basic {{ (webadmin_id + ':' + webadmin_key) | b64encode }}"
      return_content: yes
    register: token

  - name: Получить CreateUser Id
    uri:
      url: http://{{oauth_server}}:8081/oauth/check_token?token={{token.json.access_token}}
      method: POST
      headers:
        Authorization: "Basic {{ (webadmin_id + ':' + webadmin_key) | b64encode }}"
    register: createuser

  - name: Добавление подсистемы Filestorage
    uri:
      url: http://{{oauth_server}}:8085/api/1/system
      method: POST
      body: '{"name": "{{ansible_hostname + "-" + filestorage_ss_name}}", "secret": "", "authorizedGtPassword": false, "authorizedGtCode": false, "authorizedGtRefreshToken": false, "authorizedGtClientCredentials": true, "accessTokenValidity": "43200", "refreshTokenValidity": "604800", "webServerRedirectUri": "http://{{inventory_hostname}}:8080/web-api/login/code", "description": "", "createUser": "{{createuser.json.user_name}}"}'
      body_format: json
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
      status_code: 201
      return_content: yes
    register: system

  - name: Добавление пермишена для Filestorage
    uri:
      url: http://{{oauth_server}}:8085/api/1/system/{{system.json.id}}/permissions
      method: PUT
      body: '{"code": "{{item.code}}", "name": "{{item.name}}"}'
      body_format: json
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
      return_content: yes
    with_items:
      - code: DICTIONARY_VIEW
        name: DICTIONARY_VIEW
      - code: DICTIONARY_UPDATE
        name: DICTIONARY_UPDATE
      - code: SYSTEM_MANAGE
        name: SYSTEM_MANAGE

  - name: Добавление пермишена в роль Filestorage
    uri:
      url: http://{{oauth_server}}:8085/api/1/role/{{item.role}}/permissions/{{system.json.id}}
      method: PUT
      body: '[{{ item.pc | join(", ") }}]'
      # body: '{{ item.pc | join(", ") | to_json }}'
      body_format: json
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
      return_content: yes
    with_items:
      - role: SUPERUSER
        pc:
        - '"DICTIONARY_VIEW"'
        - '"DICTIONARY_UPDATE"'
      - role: AOUTH_SERVER_ADMIN
        pc:
        - '"DICTIONARY_VIEW"'
      - role: GUEST
        pc:
        - '"DICTIONARY_VIEW"'
      - role: APPLICATION_CLIENT
        pc:
        - '"SYSTEM_MANAGE"'

  - name: Активация регистрации Filestorage
    uri:
      url: http://{{oauth_server}}:8085/api/1/system/{{system.json.id}}/activation
      method: PUT
      headers:
        Authorization: "Bearer {{token.json.access_token}}"


  - name: Файл кофигурации Filestorage
    template:
      src: filestorage.yml.j2
      dest: "/etc/filestorage/application.yml"
      mode: u=rwx,g=rx,o=rx
      follow: yes
    notify:
      - Перезапуск filestorage
